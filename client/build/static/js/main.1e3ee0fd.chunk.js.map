{"version":3,"sources":["utils/format.js","components/Transaction.js","components/TransactionList.js","context/AppReducer.js","context/GlobalState.js","components/TotalBalance.js","components/Header.js","components/IncomeExpense.js","components/AddTransaction.js","App.js","index.js"],"names":["numberWithCommas","x","toString","replace","Transaction","transaction","deleteTransaction","useContext","GlobalContext","className","amount","text","onClick","_id","TransactionList","transactions","getTransactions","useEffect","map","key","AppReducer","state","action","type","loading","payload","filter","error","initialState","createContext","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","data","response","id","delete","addTransaction","config","headers","post","Provider","value","TotalBalance","total","reduce","acc","toFixed","Header","IncomeExpense","income","expense","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","Math","floor","random","placeholder","onChange","target","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e3ee0fd.chunk.js","sourcesContent":["export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <li\r\n        className={\r\n          transaction.amount < 0 ? \"transaction-expense\" : \"transaction-income\"\r\n        }\r\n      >\r\n        {transaction.text}\r\n        <span>{numberWithCommas(transaction.amount)}</span>\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={() => deleteTransaction(transaction._id)}\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Transaction from \"./Transaction\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext);\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, []);\r\n  return (\r\n    <div className=\"history\">\r\n      <p className=\"history-title\">HISTORY</p>\r\n      <hr className=\"horizontal-line\" />\r\n      <ul>\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction._id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import TransactionList from \"../components/TransactionList\";\r\n\r\nexport const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TRANSACTIONS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload,\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      };\r\n    case \"TRANSACTIONS_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { AppReducer } from \"./AppReducer\";\r\nimport axios from \"axios\";\r\n\r\n// Initial State\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n// CreateContext\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// GlobalProvider\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // ACTIONS\r\n\r\n  const getTransactions = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/transactions\");\r\n      dispatch({\r\n        type: \"GET_TRANSACTIONS\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTIONS_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTransaction = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n      dispatch({\r\n        type: \"DELETE_TRANSACTION\",\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTIONS_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addTransaction = async (transaction) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"api/v1/transactions\", transaction, config);\r\n      dispatch({\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTIONS_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst TotalBalance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const total = transactions\r\n    .map((transaction) => transaction.amount)\r\n    .reduce((acc, value) => acc + value, 0)\r\n    .toFixed(2);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"total-balance\">\r\n        <p>Your Balance</p>\r\n        <h2 className=\"balance-amount\">${numberWithCommas(total)}</h2>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TotalBalance;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"main-title\">Expense Tracker</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst IncomeExpense = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const income = transactions\r\n    .filter((transaction) => transaction.amount > 0)\r\n    .reduce((acc, value) => acc + value.amount, 0)\r\n    .toFixed(2);\r\n\r\n  const expense = transactions\r\n    .filter((transaction) => transaction.amount < 0)\r\n    .reduce((acc, value) => acc + value.amount, 0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"income-expense\">\r\n      <div className=\"income-box\">\r\n        <p>INCOME</p>\r\n        <h3 className=\"income-amount\">$ {numberWithCommas(income)}</h3>\r\n      </div>\r\n\r\n      <div className=\"expense-box\">\r\n        <p>EXPENSE</p>\r\n        <h3 className=\"expense-amount\">$ {numberWithCommas(expense)}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpense;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const addRow = (e) => {\r\n    e.preventDefault();\r\n    const transaction = {\r\n      id: Math.floor(Math.random() * 1000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    addTransaction(transaction);\r\n    setText(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addRow}>\r\n      <div className=\"add-transaction\">\r\n        <p>Add New Transaction</p>\r\n        <hr className=\"horizontal-line\" />\r\n        <p>Text</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-transaction\"\r\n          placeholder=\"Enter text...\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <p>Amount</p>\r\n        <span>(negative - expense; positive - income)</span>\r\n        <input\r\n          type=\"number\"\r\n          className=\"transaction-amount\"\r\n          placeholder=\"Enter Amount...\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button className=\"add-btn\" type=\"submit\">\r\n          Add Transaction\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TotalBalance from \"./components/TotalBalance\";\nimport Header from \"./components/Header\";\nimport IncomeExpense from \"./components/IncomeExpense\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"main-container\">\n        <Header />\n        <TotalBalance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}